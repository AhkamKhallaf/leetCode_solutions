*  an algorithm with O(log n) runtime complexity (binary search)
 class Solution {
  int searchInsert(List<int> nums, int target) {
    int left = 0;
    int right = nums.length - 1;
    
    while (left <= right) {
      int mid = left + (right - left) ~/ 2;
      
      if (nums[mid] == target) {
        return mid;
      } else if (nums[mid] < target) {
        left = mid + 1;
      } else {
        right = mid - 1;
      }
    }
    
    return left; // insertion position
  }
}
 an algorithm with O(n) runtime complexity (linear search)
 int searchInsert(List<int> nums, int target) {
    for(int i=0;i<nums.length;i++){
      if(nums[i]>=target){
        return i;
      } 
       
       
    }
     return nums.length;
  }
